CCC := g++
CPPFLAGS := -g -O2 -std=c++11 -fopenmp

# define the target directories.
TARGETDIR=.
SRCDIR=src
BINDIR=bin
# OBJS =  $(TARGETDIR)/$(patsubst %.cpp,%.o,$(wildcard *.cpp))
AVGOBJ := average.o
QOBJ := q.o
F2POBJ := field2points.o
FFTOBJ := fft.o
SRC := $(wildcard $(SRCDIR)/*.cpp)
OBJ := $(patsubst %.cpp,%.o,$(wildcard $(SRCDIR)/*.cpp))

# include directories and external libraries
INCLUDES = -I./lib/tecio/tecsrc -I./lib/ -I./src 

# required external library
LIBEXT =  ./lib/libtecio_macos.a\
          ./lib/libfftw3_macos.a

# standard library
LINK_LIBS= -lblas -llapack

AVG=$(BINDIR)/average.app
Q=$(BINDIR)/q.app
F2P=$(BINDIR)/field2points.app
FFT=$(BINDIR)/fft.app
	
all: $(AVG) $(Q) $(F2P) $(FFT)

$(AVG): $(OBJ) $(AVGOBJ)
	$(CCC) $(CPPFLAGS) $(INCLUDES) $(OBJ) $(AVGOBJ) -o $(AVG) $(LIBEXT) $(LINK_LIBS)

$(Q): $(OBJ) $(QOBJ)
	$(CCC) $(CPPFLAGS) $(INCLUDES) $(OBJ) $(QOBJ) -o $(Q) $(LIBEXT) $(LINK_LIBS)

$(F2P): $(OBJ) $(F2POBJ)
	$(CCC) $(CPPFLAGS) $(INCLUDES) $(OBJ) $(F2POBJ) -o $(F2P) $(LIBEXT) $(LINK_LIBS)

$(FFT): $(OBJ) $(FFTOBJ)
	$(CCC) $(CPPFLAGS) $(INCLUDES) $(OBJ) $(FFTOBJ) -o $(FFT) $(LIBEXT) $(LINK_LIBS)
		
# Compile all source files .cpp into .o files
$(TARGETDIR)/%.o: $(TARGETDIR)/%.cpp
	$(CCC) $(CPPFLAGS) $(INCLUDES) -o $@ -c $<

# Clean target deletes all generated files
REBUILDABLES = $(AVG) $(Q) $(F2P) $(FFT) $(AVGOBJ) $(QOBJ) $(F2POBJ) $(FFTOBJ) $(OBJ)
clean:
	rm -f $(REBUILDABLES)
